on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

name: render-reports

jobs:
  render-reports:
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-pandoc@v1
      - uses: r-lib/actions/setup-r@v1

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          install.packages(c("remotes", "curl"))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}
        
      - name: Render evaluation report
        run: |
          rmarkdown::render("reports/real-time/index.Rmd")
        shell: Rscript {0}

      - name: Upload reports
        uses: actions/upload-artifact@v2
        with:
          name: reports
          retention-days: 5
          path: reports

  publish-reports:
    if: github.ref == 'refs/heads/main' && github.repository == 'epiforecasts/eval-germany-sp-nowcasting'
    needs: render-reports
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v2
    - name: Make a clean gh-pages branch
      run: |
        git checkout --orphan gh-pages
    - uses: actions/download-artifact@v2
      with:
        name: reports
        path: .
    - name: Commit and push reports
      run: |
        git config user.email "action@github.com"
        git config user.name "GitHub Action - Published reports"
        git add --all
        git commit -m "Published reports"
        git push -f origin gh-pages:gh-pages
        echo "reports published to GitHub"
